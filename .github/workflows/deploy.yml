name: Frontend Deployment

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install rsync and ssh
        run: sudo apt-get update && sudo apt-get install -y rsync openssh-client

      - name: Setup SSH key
        run: |
          # Создаем .ssh директорию
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Записываем приватный ключ в файл
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          # Добавляем хост в known_hosts (чтобы избежать вопроса о доверии)
          ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          scp -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key \
              ./docker-compose.yml ./Dockerfile \
              ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ secrets.PROJECT_PATH }}/

      - name: Deploy container via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # Выход при ошибке любой команды
            cd "${{ secrets.PROJECT_PATH }}"

            # Безопасный down (только текущий проект)
            docker compose down || true

            # Запуск с билдом (если нужно пересобрать образы)
            docker compose up -d --build

            # Ожидание готовности контейнера
            timeout 60 bash -c 'until docker inspect -f "{{.State.Running}}" hb_service_app 2>/dev/null | grep -q "true"; do sleep 2; done'

            docker exec -u root hb_service_app bash -c "yarn install && yarn build && chown -R www:www /var/www"
